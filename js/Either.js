// Generated by CoffeeScript 1.12.4
var Either, Validator, formatType, wrongType;

formatType = require("formatType");

Validator = require("Validator");

wrongType = require("wrongType");

Either = Validator.Type("Either", {
  init: function() {
    var i, len, type, types;
    types = [];
    for (i = 0, len = arguments.length; i < len; i++) {
      type = arguments[i];
      if (type) {
        types.push(type);
      }
    }
    this.types = types;
  },
  name: function() {
    return formatType(this.types);
  },
  test: function(value) {
    var constructor, i, len, type, types;
    types = this.types;
    if (value != null) {
      constructor = value.constructor;
    }
    for (i = 0, len = types.length; i < len; i++) {
      type = types[i];
      if (type === constructor) {
        return true;
      }
      if (type instanceof Validator) {
        if (type.test(value)) {
          return true;
        }
      }
    }
    return false;
  },
  assert: function(value, key) {
    var constructor, error, i, len, type, types;
    types = this.types;
    if (value != null) {
      constructor = value.constructor;
    }
    for (i = 0, len = types.length; i < len; i++) {
      type = types[i];
      if (type === constructor) {
        return;
      }
      if (type instanceof Validator) {
        error = type.assert(value, key);
        if (!error) {
          return;
        }
        if (error instanceof TypeError) {
          if (~error.message.indexOf("`" + key + "`")) {
            continue;
          }
        }
        return error;
      }
    }
    return wrongType(types, key);
  }
});

module.exports = Either;
